#include <bits/stdc++.h>

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    vector<int> res;
    if (root == NULL)
        return res;
    queue<BinaryTreeNode<int> *> q;
    q.push(root);
    bool l2r = true;
    while (!q.empty())
    {
        int size = q.size();
        vector<int> row(size);
        for (int i = 0; i < size; i++)
        {
            BinaryTreeNode<int> *cur = q.front();
            q.pop();
            if (cur->left != NULL)
                q.push(cur->left);
            if (cur->right != NULL)
                q.push(cur->right);
            int index = (!l2r) ? size - 1 - i : i;
            row[index] = cur->data;
        }
        l2r = !l2r;
        res.insert(res.end(), row.begin(), row.end());
    }
    return res;
}
