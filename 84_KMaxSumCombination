#include<bits/stdc++.h>

vector<int> kMaxSumCombination(vector<int> &a, vector<int> &b, int n, int k){
	// Write your code here.
	vector<int> res;

	sort(a.begin(),a.end());
	sort(b.begin(),b.end());

	priority_queue<pair<int,pair<int,int>>> pq;
	pq.push({a[n-1]+b[n-1],{n-1,n-1}});

	set<pair<int,int>> s;
	s.insert({n-1,n-1});

	while(k > 0){
		auto ele = pq.top();
		pq.pop();

		int sum = ele.first;
		int x = ele.second.first;
		int y = ele.second.second;

		k--;
		res.push_back(sum);

		if(s.find({x,y-1}) == s.end()){
			pq.push({a[x]+b[y-1],{x,y-1}});
			s.insert({x,y-1});
		}
		if(s.find({x-1,y}) == s.end()){
			pq.push({a[x-1]+b[y],{x-1,y}});
			s.insert({x-1,y});
		}
	}

	return res;
}
